########## RULE BASED CONDITIONS ##########

[rule::snort]
sourcetype = snort
# IF MORE THAN 5% OF LINES MATCH REGEX, MUST BE THIS TYPE
MORE_THAN_1 = (=\+)+
MORE_THAN_10 = (?:[0-9A-F]{2} ){16}

[rule::exim_main]
sourcetype = exim_main
# MORE THAN 2% HAVE <=, =>, 'queue'
MORE_THANA_2 = <=
MORE_THANB_2 = =>
MORE_THANC_2 = queue

[rule::postfix_syslog]
sourcetype = postfix_syslog
# IF 75% OF LINES MATCH REGEX, MUST BE THIS TYPE
MORE_THAN_75 = ^\w{3} +\d+ \d\d:\d\d:\d\d .* postfix(/\w+)?\[\d+\]:

[rule::sendmail_syslog]
sourcetype = sendmail_syslog
# IF 75% OF LINES MATCH REGEX, MUST BE THIS TYPE
MORE_THAN_75 = ^\w{3} +\d+ \d\d:\d\d:\d\d .* (sendmail|imapd|ipop3d)\[\d+\]:

[rule::access_common]
sourcetype = access_common
MORE_THAN_75 = ^\S+ \S+ \S+ \[[^\]]+\] "[^"]+" \S+ \S+$

[rule::access_combined]
sourcetype = access_combined
MORE_THAN_75 = ^\S+ \S+ \S+ \S* ?\[[^\]]+\] "[^"]*" \S+ \S+ \S+ "[^"]*"$

[rule::access_combined_wcookie]
sourcetype = access_combined_wcookie
# more restrictive version = ^\S+ \S+ \S+ \S* ?\[[^\]]+\] "[^"]*" \S+ \S+ \S+ "[^"]*" "[^"]*"$
MORE_THAN_75   = ^\S+ \S+ \S+ \S* ?\[[^\]]+\] "[^"]*" \S+ \S+(?: \S+)? "[^"]*" "[^"]*"

### DELAYED RULE BASED CONDITIONS.  RUN AS LAST DITCH EFFORT BEFORE MAKING A NEW SOURCETYPE  ###

# break text on ascii art and blanklines if more than 10% of lines
# have ascii art or blanklines, and less than 10% have timestamps
[delayedrule::breakable_text]
MORE_THAN_10 = (^(?:---|===|\*\*\*|___|=+=))|^\s*$
LESS_THAN_10 = [: ][012]?[0-9]:[0-5][0-9]
sourcetype = breakable_text

[delayedrule::syslog]
sourcetype = syslog
# IF MORE THAN 80% OF LINES MATCH REGEX, MUST BE THIS TYPE
MORE_THAN_80 = ^\w{3} +\d+ \d\d:\d\d:\d\d (?!AM|PM)[\w\-.]+ [\w\-/.]+(\[\d+\])?:

########## FILE MATCH CONDITIONS ##########

[source::.../var/log/anaconda.syslog(.\d+)?]
sourcetype = anaconda_syslog

[source::.../var/log/anaconda.log(.\d+)?]
sourcetype = anaconda

[source::.../var/log/httpd/error_log(.\d+)?]
sourcetype = apache_error

[source::.../var/log/cups/access_log(.\d+)?]
sourcetype = cups_access

[source::.../var/log/cups/error_log(.\d+)?]
sourcetype = cups_error

[source::.../var/log/dmesg(.\d+)?]
sourcetype = dmesg

[source::.../var/log/ftp.log(.\d+)?]
sourcetype = ftp

[source::.../(u_|)ex(tend|\d{4,8})*?.log]
sourcetype = iis

[source::.../var/log/lastlog(.\d+)?]
sourcetype = lastlog

[source::.../var/log/audit/audit.log(.\d+)?]
sourcetype = linux_audit

[source::.../var/log/boot.log(.\d+)?]
sourcetype = linux_bootlog

[source::.../var/log/secure(.\d+)?]
sourcetype = linux_secure

[source::.../man/man\d+/*.\d+]
sourcetype = manpage

[source::.../var/log/asl.log(.\d+)?]
sourcetype = osx_asl

[source::.../var/log/crashreporter.log(.\d+)?]
sourcetype = osx_crashreporter

[source::....crash.log(.\d+)?]
sourcetype = osx_crash_log

[source::.../var/log/install.log(.\d+)?]
sourcetype = osx_install

[source::.../var/log/secure.log(.\d+)?]
sourcetype = osx_secure

[source::.../var/log/daily.out(.\d+)?]
sourcetype = osx_daily

[source::.../var/log/weekly.out(.\d+)?]
sourcetype = osx_weekly

[source::.../var/log/monthly.out(.\d+)?]
sourcetype = osx_monthly

[source::.../private/var/log/windowserver.log(.\d+)?]
sourcetype = osx_window_server

[source::....Z(.\d+)?]
unarchive_cmd = gzip -cd -
sourcetype = preprocess-Z
NO_BINARY_CHECK = true

[source::....(tbz|tbz2)(.\d+)?]
unarchive_cmd = _auto
sourcetype = preprocess-bzip
NO_BINARY_CHECK = true

[source::....bz2?(.\d+)?]
unarchive_cmd = bzip2 -cd -
sourcetype = preprocess-bzip
NO_BINARY_CHECK = true

[source::....(?<!tar.)gz(.\d+)?]
unarchive_cmd = gzip -cd -
sourcetype = preprocess-gzip
NO_BINARY_CHECK = true

[source::....(tar.gz|tgz)(.\d+)?]
unarchive_cmd = _auto
sourcetype = preprocess-targz
NO_BINARY_CHECK = true

[source::....tar(.\d+)?]
unarchive_cmd = _auto
sourcetype = preprocess-tar
NO_BINARY_CHECK = true

[(?i)source::....zip(.\d+)?]
unarchive_cmd = _auto
sourcetype = preprocess-zip
NO_BINARY_CHECK = true

[source::.../var/log/rpmpkgs(.\d+)?]
sourcetype = rpmpkgs

[source::.../var/log/sa/sar\d+]
sourcetype = sar

[source::.../var/log/spooler(.\d+)?]
sourcetype = spooler

[source::.../var/log/httpd/httpd/ssl_error_log(.\d+)?]
sourcetype = ssl_error

[source::.../messages(.\d+)?]
sourcetype = syslog

[source::.../syslog(.\d+)?]
sourcetype = syslog

#[source::.../(www|apache|httpd).../access*]
#sourcetype = access_common

[source::.../(apache|httpd).../error*]
sourcetype = apache_error

[source::.../private/var/log/system.log(.\d+)?]
sourcetype = syslog

[source::.../private/var/log/mail.log(.\d+)?]
sourcetype = syslog

[source::.../var/log/wtmp(.\d+)?]
sourcetype = wtmp

[source::.../procmail(_|.)log]
sourcetype = procmail

[source::.../mysql.log(.\d+)?]
sourcetype = mysqld

[source::...stash]
sourcetype = stash

[source::...stash_new]
sourcetype = stash_new